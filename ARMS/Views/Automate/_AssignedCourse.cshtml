@using Newtonsoft.Json
@model ARMS.ViewModels.AssignedCourseViewModel
@{
    ViewData["Title"] = "Automate";
    var i = 0;
}
    
<section class="page-table">
    <div class="col-md-12 col-lg-12">
        <div class="block block--underline">
            <div class="block__body text-left height-3">
                <div class="table-responsive">
                    <table id="table-assigned-course" class="table table-bordered table-hover">
                        <thead>
                        <tr>
                            <th class="mn-w-40px w-40px"><img class="w-15px h-15px" src="~/assets/icon/sort.png" alt=""/></th>
                            <th class="mn-w-150px w-auto">Course</th>
                            <th class="mn-w-150px w-150px">Total Section</th>     
                            <th class="mn-w-150px w-150px">Total Student</th>
                            <th class="mn-w-150px w-150px">Total Room</th>
                            <th class="mn-w-200px w-200px">@Model.SessionText On</th>
                            <th class="mn-w-80px w-80px no-sort">Action</th>
                            <th class="mn-w-90px w-90px">Created By</th>
                        </tr>
                        </thead>
                        <tbody>        
                        @foreach (var item in JsonConvert.DeserializeObject<List<AssignedCourse>>(Model.AssignedCourses))
                        {
                            i++;
                            <tr>
                                <td>@i.ToString()</td>
                                <td class="text-ellipsis mn-w-150px w-auto">@item.CodeAndName</td>
                                <td>@item.TotalSection</td>
                                <td>@item.TotalStudent</td>
                                <td>@item.TotalRoom</td>
                                <td>@item.ExaminationSlot.ExaminationDateTime</td>
                                <td class="display-flex">
                                    <a asp-controller="Automate" asp-action="ExaminationRoom" asp-route-semesterId="@Model.SemesterId" asp-route-examinationTypeId="@Model.ExaminationTypeId" asp-route-examinationSlotId="@item.ExaminationSlot.Id" asp-route-courseId="@item.CourseId" asp-route-courseCodeName="@item.CodeAndName"  class="btn-image btn-image-info w-23px h-23px"><img class="w-15px h-15px" src="@Url.Content("~/assets/icon/info.png")" alt=""/></a>
                                    <a asp-controller="Home" asp-action="DissolvedCourse" asp-route-courseId="@item.CourseId" asp-route-examinationSlotId="@item.ExaminationSlot.Id" class="btn-image btn-image-danger w-23px h-23px"><img class="w-15px h-15px" src="@Url.Content("~/assets/icon/trash.png")" alt=""/></a>
                                </td>
                                <td>@item.CreatedBy</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(document).ready(function() {
        
        const database = firebase.database();
        const reload = $('div[id$=main-reloading]');
        const automatePartial = $('#automate-partial');
        const handleTable = $('#table-assigned-course');
        handleTable.DataTable({
        "columnDefs": [{
            "targets": "no-sort",
            "orderable": false
            }]
        });
        handleTable.on('click', '.btn-image-info', function(event) {
            reload.show();
            event.preventDefault();
            const url = $(this).attr("href");
            $.post(url).done(function(result) {
                automatePartial.html(result); 
                reload.hide();
            });
        }).on('click', '.btn-image-danger', function(event) {
            event.preventDefault();
            const url = $(this).attr("href");
            console.log(url);
            handleDelete(url);
        });
        
        function handleDelete(url) {
            bootbox.confirm('Are you sure you want to reset this examination course?', function(res){
                if (res) {
                    reload.show();
                    database.ref().child('dissolving').once('value').then(function(snapshot) {
                        if (snapshot.val()['isDissolving'] !== true) {
                            database.ref().child('assigning').once('value').then(function(snapshot) {
                                if (snapshot.val()['isProcessing'] === true) {
                                    loadAssignmentInfo('This function cannot be activated right now due to another process is running, please try again later.');
                                    reload.hide();
                                } else {
                                    $.post(url).done(function(res) {
                                        console.log(res['isSuccess']);
                                        if (res['isSuccess']) {
                                            console.log('IsSuccess');
                                            setTimeout(function() {
                                                loadAssignmentInfo('This examination course has been reset successfully.');
                                                loadAssignedCourse();
                                            }, 1);
                                        } else {
                                            reload.hide();
                                            loadAssignmentInfo('There is a fail request, please try again.');
                                        }
                                    });
                                }
                            });
                        } else {
                            loadAssignmentInfo('This function cannot be activated right now due to another process is running, please try again later.');
                            reload.hide();
                        }
                    });
                }
            }).find('.modal-content').css({
               'margin-top': function (){
                   const w = $( window ).height();
                   const b = $(".modal-dialog").height();
                   const h = (w - b) / 2;
                   return h + "px";
               },
               'width': '39rem'
            });
        }

        function loadAssignmentInfo(info) {
            bootbox.alert(info).find('.modal-content').css({
                'margin-top': function (){
                    const w = $( window ).height();
                    const b = $(".modal-dialog").height();
                    const h = (w - b) / 2;
                    return h + "px";
                },
                'width': '39rem'
            }); 
        }
        
        function loadAssignedCourse() {
            const semesterSelected = $('select[id$=semester]').val();
            const sessionSelected = $('select[id$=session]').val();
            const sessionText = $('select[id$=session] option:selected').text();
            $.ajax({
                type: 'POST',
                url: `@Url.Action("AssignedCourse", "Automate")?semesterId=${semesterSelected}&examinationTypeId=${sessionSelected}&sessionText=${sessionText}`,
                cache: true
            }).done(function(res) {
                automatePartial.empty().append(res);
                reload.hide();
            }).fail(function(a, b, c) {
                console.log('It is error');
                console.log(c);
            });
        }    
    }); 
</script>
